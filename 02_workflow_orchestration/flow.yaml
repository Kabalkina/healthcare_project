id: 01_postgres_data
namespace: healthcare
description: |
  The CSV Data: https://github.com/Kabalkina/healthcare_project/tree/main/data
  CSV uses `;` as separator.

inputs:
  - id: year
    type: SELECT
    displayName: Select year
    values: ["2021", "2022", "2023"]
    defaults: "2023"

variables:
  file: "23131-0002_en_{{inputs.year}}.csv"
  staging_table: "public.healthcare_data_staging"
  table: "public.healthcare_data_staging"
  data: "{{outputs.extract.outputFiles['healthcare_data_' ~ inputs.year ~ '.csv']}}"

tasks:
  - id: extract
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.csv"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - wget -qO "healthcare_data_{{inputs.year}}.csv" https://raw.githubusercontent.com/Kabalkina/healthcare_project/main/data/{{render(vars.file)}}

  - id: create_table
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      CREATE TABLE IF NOT EXISTS {{render(vars.table)}} (
        unique_row_id text,
        filename text,
        statistics_code integer,
        statistics_label text,
        time_code text,
        time_label text,
        time integer,
        "1_variable_code" text,
        "1_variable_label" text,
        "1_variable_attribute_code" text,
        "1_variable_attribute_label" text,
        "2_variable_code" text,
        "2_variable_label" text,
        "2_variable_attribute_code" text,
        "2_variable_attribute_label" text,
        "3_variable_code" text,
        "3_variable_label" text,
        "3_variable_attribute_code" text,
        "3_variable_attribute_label" text,
        "4_variable_code" text,
        "4_variable_label" text,
        "4_variable_attribute_code" text,
        "4_variable_attribute_label" text,
        value integer,
        value_unit text,
        value_variable_code text,
        value_variable_label text
      );

  - id: create_staging_table
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      CREATE TABLE IF NOT EXISTS {{render(vars.staging_table)}} (
        unique_row_id text,
        filename text,
        statistics_code integer,
        statistics_label text,
        time_code text,
        time_label text,
        time integer,
        "1_variable_code" text,
        "1_variable_label" text,
        "1_variable_attribute_code" text,
        "1_variable_attribute_label" text,
        "2_variable_code" text,
        "2_variable_label" text,
        "2_variable_attribute_code" text,
        "2_variable_attribute_label" text,
        "3_variable_code" text,
        "3_variable_label" text,
        "3_variable_attribute_code" text,
        "3_variable_attribute_label" text,
        "4_variable_code" text,
        "4_variable_label" text,
        "4_variable_attribute_code" text,
        "4_variable_attribute_label" text,
        value integer,
        value_unit text,
        value_variable_code text,
        value_variable_label text
      );

  - id: truncate_staging_table
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      TRUNCATE TABLE {{render(vars.staging_table)}};

  - id: copy_in_to_staging_table
    type: io.kestra.plugin.jdbc.postgresql.CopyIn
    format: CSV
    from: "{{render(vars.data)}}"
    table: "{{render(vars.staging_table)}}"
    header: true
    delimiter: ";"
    columns: [statistics_code,statistics_label,time_code,time_label,time,"1_variable_code","1_variable_label","1_variable_attribute_code","1_variable_attribute_label","2_variable_code","2_variable_label","2_variable_attribute_code","2_variable_attribute_label","3_variable_code","3_variable_label","3_variable_attribute_code","3_variable_attribute_label","4_variable_code","4_variable_label","4_variable_attribute_code","4_variable_attribute_label",value,value_unit,value_variable_code,value_variable_label]

  - id: add_unique_id_and_filename
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      UPDATE {{render(vars.staging_table)}}
      SET 
        unique_row_id = md5(
          COALESCE(CAST(time AS text), '') ||
          COALESCE(CAST("1_variable_attribute_label" AS text), '') ||
          COALESCE(CAST("2_variable_attribute_label" AS text), '') ||
          COALESCE(CAST("3_variable_attribute_label" AS text), '') ||
          COALESCE(CAST("4_variable_attribute_label" AS text), '')
        ),
        filename = '{{render(vars.file)}}';

  - id: merge_data
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      MERGE INTO {{render(vars.table)}} AS T
      USING {{render(vars.staging_table)}} AS S
      ON T.unique_row_id = S.unique_row_id
      WHEN NOT MATCHED THEN
        INSERT (
          unique_row_id, filename,
          statistics_code, statistics_label, time_code, time_label, time,
          "1_variable_code", "1_variable_label", "1_variable_attribute_code", "1_variable_attribute_label",
          "2_variable_code", "2_variable_label", "2_variable_attribute_code", "2_variable_attribute_label",
          "3_variable_code", "3_variable_label", "3_variable_attribute_code", "3_variable_attribute_label",
          "4_variable_code", "4_variable_label", "4_variable_attribute_code", "4_variable_attribute_label",
          value, value_unit, value_variable_code, value_variable_label
        )
        VALUES (
          S.unique_row_id, S.filename,
          S.statistics_code, S.statistics_label, S.time_code, S.time_label, S.time,
          S."1_variable_code", S."1_variable_label", S."1_variable_attribute_code", S."1_variable_attribute_label",
          S."2_variable_code", S."2_variable_label", S."2_variable_attribute_code", S."2_variable_attribute_label",
          S."3_variable_code", S."3_variable_label", S."3_variable_attribute_code", S."3_variable_attribute_label",
          S."4_variable_code", S."4_variable_label", S."4_variable_attribute_code", S."4_variable_attribute_label",
          S.value, S.value_unit, S.value_variable_code, S.value_variable_label
        );

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: This will remove output files. If you'd like to explore Kestra outputs, disable it.

pluginDefaults:
  - type: io.kestra.plugin.jdbc.postgresql
    values:
      url: jdbc:postgresql://host.docker.internal:5432/postgres-health
      username: kestra
      password: k3str4
